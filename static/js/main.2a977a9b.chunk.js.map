{"version":3,"sources":["BooksAPI.js","BookshelfChanger.js","Book.js","Bookshelf.js","ListBooks.js","SearchBooksInput.js","SearchBooksResult.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","data","books","BookshelfChanger","state","value","props","handleChange","event","target","onMove","setState","className","this","onChange","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","thumbnail","title","authors","join","Bookshelf","name","filter","key","map","ListBooks","bookshelves","to","SearchBooksInput","onSearch","type","placeholder","autoFocus","SearchBooksResult","searchBooks","b","SearchBooks","onResetSearch","onClick","BooksApp","error","moveBook","BooksAPI","catch","prevState","concat","searchForBooks","length","resetSearch","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a977a9b.chunk.js","sourcesContent":["\nconst api = 'https://reactnd-books-api.udacity.com';\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\r\n\r\nclass BookshelfChanger extends Component {\r\n  state = {\r\n    value: this.props.shelf,\r\n  }\r\n  \r\n  handleChange = event => {\r\n    const { value } = event.target;\r\n    const { onMove, book } = this.props;\r\n    this.setState({ value });\r\n    onMove(book, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book-shelf-changer\">\r\n        <select value={this.state.value} onChange={this.handleChange}>\r\n          <option value=\"move\" disabled>Move to...</option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Have Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookshelfChanger;","import React from 'react';\r\nimport BookshelfChanger from './BookshelfChanger'; \r\n\r\nconst Book = ({ book, shelf, onMove }) => (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div \r\n            className=\"book-cover\" \r\n            style={{ \r\n              width: 128, \r\n              height: 193, \r\n              backgroundImage: `url(${book.imageLinks &&\r\n                book.imageLinks.thumbnail})`            \r\n            }}\r\n          />\r\n          <BookshelfChanger book={book} shelf={shelf} onMove={onMove} />\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        <div className=\"book-authors\">\r\n            {book.authors ? book.authors.join(', ') : 'Unidentified Author'}\r\n        </div>\r\n      </div>\r\n    </li>\r\n)\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book';\r\n\r\nconst Bookshelf = ({ shelf, books, onMove }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">\r\n        {shelf.name}\r\n      </h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.filter(book => book.shelf === shelf.key).map(book => (\r\n            <Book key={book.id} book={book} shelf={shelf.key} onMove={onMove} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bookshelf;","import React, { Component } from 'react';\r\nimport Bookshelf from './Bookshelf';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ListBooks extends Component {\r\n    render() {\r\n      const { bookshelves, books, onMove } = this.props;\r\n      return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-book-content\">\r\n              <div>\r\n                {bookshelves.map(shelf => (\r\n                  <Bookshelf \r\n                    key={shelf.key} \r\n                    shelf={shelf} \r\n                    books={books} \r\n                    onMove={onMove}/>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n                <Link to=\"search\">\r\n                    <button> \r\n                        Add a book\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ListBooks;","import React, { Component} from 'react';\r\n\r\nclass SearchBooksInput extends Component {\r\n  state = {\r\n    value: '',\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { value } = event.target;\r\n    this.setState({ value }, () => {\r\n      this.props.onSearch(value)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books-input-wrapper\">\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.value} \r\n          placeholder=\"Search by title or author\" \r\n          onChange={this.handleChange}\r\n          autoFocus\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooksInput;","import React from 'react';\r\nimport Book from './Book';\r\n\r\nconst SearchBooksResult = ({ books, searchBooks, onMove }) => {\r\n  return (\r\n    <div className=\"search-books-results\">\r\n      <ol className=\"books-grid\">\r\n        {searchBooks.map(book => {\r\n          books.map(b => {\r\n            if(b.id === book.id) {\r\n              book.shelf = b.shelf;\r\n            }\r\n            return b;\r\n          });\r\n          return book;\r\n        }).map(book => (\r\n          <Book \r\n            key={book.id} \r\n            book={book} \r\n            shelf={book.shelf ? book.shelf : 'none'}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBooksResult;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBooksInput from './SearchBooksInput';\r\nimport SearchBooksResult from './SearchBooksResult';\r\n\r\nclass SearchBooks extends Component {\r\n  render() {\r\n    const { books, searchBooks, onSearch, onResetSearch, onMove } = this.props;\r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\">\r\n                    <button \r\n                        className=\"close-search\" \r\n                        onClick={() => (onResetSearch)}>\r\n                            Close\r\n                    </button>\r\n                </Link>\r\n                <SearchBooksInput onSearch={onSearch} />\r\n            </div>        \r\n            <SearchBooksResult books={books} searchBooks={searchBooks} onMove={onMove}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport ListBooks from './ListBooks';\nimport SearchBooks from './SearchBooks';\n\nclass BooksApp extends Component {\n  bookshelves = [\n    {  name: 'Currently Reading', key: 'currentlyReading' },\n    {  name: 'Want to Read', key: 'wantToRead' },\n    {  name: 'Have Read', key: 'read' }\n  ];\n\n  state = {\n    books: [],\n    searchBooks: [],\n    error: false\n  };\n\n  moveBook = (book, shelf) => {\n    BooksAPI.update(book, shelf).catch(error => {\n      this.setState({ error: true });\n    });\n    if (shelf === 'none') {\n      this.setState(prevState => ({\n        books: prevState.books.filter(b => b.id !== book.id)\n      }));\n    } else {\n      book.shelf = shelf;\n      this.setState(prevState => ({\n        books: prevState.books.filter(b => b.id !== book.id).concat(book)\n      }));\n    }\n  };\n\n  searchForBooks = query => {\n    if (query.length > 0) {\n      BooksAPI.search(query).then(books => {\n        if (books.error) {\n          this.setState({ searchBooks: [] });\n        } else {\n          this.setState({ searchBooks: books });\n        }\n      });\n    } else {\n      this.setState({ searchBooks: [] });\n    }\n  };\n\n  resetSearch = () => {\n    this.setState({ searchBooks: [] });\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then(books => {\n        this.setState({ books });\n      })\n      .catch(error => {\n        this.setState({ error: true });\n      });\n  };\n\n  render() {\n    const { books, searchBooks, error } = this.state;\n    if (error) {\n      return <h3>Oops Sorry! Network error... Please try again later.</h3>;\n    }\n    return (\n      <div className=\"app\">\n        <Route \n          exact \n          path=\"/\" \n          render={() => (\n            <ListBooks  \n              bookshelves={this.bookshelves} \n              books={books} \n              onMove={this.moveBook}\n            />\n          )} />\n        <Route \n          path=\"/search\" \n          render={() => (\n            <SearchBooks \n              searchBooks={searchBooks}\n              books={books}\n              onSearch={this.searchForBooks}\n              onMove={this.moveBook}\n              onResetSearch={this.resetSearch}\n            />\n          )}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}